# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bmhtubjz2HKP2tK0AfB6zm_F4fHHbCUk
"""

import random
#генерирование случайной матрицы MxN
def random_matrix(M,N):
  left = random.randint(-9,5)
  right = left+random.randint(0,10)
  A = [[random.randint(left,right) for j in range(N)] for i in range(M)]
  return A
#Функция вывода матрицы
def print_matrix(A, format_str): # A - матрица, format_str - формат вывода
  for row in A:
    for col in row:
      print(format_str.format(col),end=' ')
    print()
  print()
#Сумма матриц A и B
def sum_matrix(A1,A2):
  m1 = len(A1)
  n1 = len(A1[0])
  if m1!=len(A2) or n1!=len(A2[0]):
    print("Размерности матриц не совпадают!")
    return 0,[]
  else:
    C=A2[:]
    for i in range(m1):
      for j in range(n1):
        C[i][j] += A1[i][j]
    return 1,C
#Произведение матриц A и B
def prod_matrix(A1,A2):
  m1 = len(A1)
  n1 = len(A1[0])
  m2 = len(A2)
  n2 = len(A2[0])
  if n1!=m2:
    print("Операция умножения невозможна!")
    return 0,[]
  else:
    C = [[0 for j in range(n2)] for i in range(m1)]
    for i in range(m1):
      for j in range(n2):
        for k in range(n1):
          C[i][j] += A1[i][k] * A2[k][j]
    return 1,C
# случайный вектор длины N
def random_vector(N):
  left = random.randint(-5,5)
  right = left+random.randint(0,10)
  a=[]
  for i in range(N):
    #добавляем в массив случайное число от left до right
    a.append(random.randint(left,right))
  return a
#левое произведение вектора a на матрицу A1
def vec_to_matrix(a,A1):
  m1 = len(A1)
  n1 = len(A1[0])
  if len(a)!=m1:
    print("Операция умножения невозможна!")
    return 0,[]
  else:
    C = [0  for i in range(n1)]
    for i in range(n1):
      for j in range(m1):
         C[i] += a[j] * A1[j][i]
    return 1,C

#правое произведение вектора a на матрицу A1
def matrix_to_vec(A1,a):
  m1 = len(A1)
  n1 = len(A1[0])
  if len(a)!=n1:
    print("Операция умножения невозможна!")
    return 0,[]
  else:
    C = [0  for i in range(m1)]
    for i in range(m1):
      for j in range(n1):
         C[i] +=  A1[i][j] * a[j]
    return 1,C

#a
print("A[m1][n1]")
m1 = int(input("Введите m1: "))
n1 = int(input("Введите n1: "))
A = random_matrix(m1,n1)
print_matrix(A,"{: }")
print("B[m2][n2]")
m2 = int(input("Введите m2: "))
n2 = int(input("Введите n2: "))
B = random_matrix(m2,n2)
print_matrix(B,"{: }")
print("C=A+B")
flag, C = sum_matrix(A,B)
print_matrix(C,"{: }")

#б
print("A[m1][n1]")
m1 = int(input("Введите m1: "))
n1 = int(input("Введите n1: "))
A = random_matrix(m1,n1)
print_matrix(A,"{: }")
print("B[m2][n2]")
m2 = int(input("Введите m2: "))
n2 = int(input("Введите n2: "))
B = random_matrix(m2,n2)
print_matrix(B,"{: }")
print("D=AB")
flag, D = prod_matrix(A,B)
print_matrix(D,"{: }")
#в
n = int(input("Введите размерность вектора v: "))
v=random_vector(n)
print("v =", v)
flag, x=vec_to_matrix(v,B)
print("vB =", x)
flag, x=matrix_to_vec(A,v)
print("Av =", x)

