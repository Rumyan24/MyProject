import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters, ConversationHandler

# Настройка логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Словарь с вопросами и ответами
faq = {
  "Почему антиплагиат загружают 6 мая, а в ТУИС можно вносить изменения ВКР до 20 мая?":
      "Если от студента не приходит заявки на повторную проверку, результаты фиксируются...",
  "Какой язык используется при защите ВКР? Нужно ли переводить на английский язык?":
      "Нет, не обязательно переводить ВКР на английский язык...",
  "Можно ли использовать искусственный интеллект при написании выпускной работы?":
      "Нет, использование искусственного интеллекта при написании выпускной работы запрещено...",
  "Если загрузка в антиплагиат происходит 6 мая, что означает дата 1 мая?":
      "1 мая — это крайний срок, к которому вы должны отправить свою ВКР научному руководителю...",
  "Если в антиплагиате показывается 85% оригинальности, можем ли мы увидеть результат с доработкой после каждой отправки?":
      "Доработка – это ручная работа проверяющего...",
  "Какие документы в ТУИСе нужно посмотреть, чтобы подготовиться к ГИА?":
      "Стоит обратить внимание на несколько ключевых документов в ТУИСе...",
  "Что должна делать ГОС группа по иностранному языку?":
      "Для ГОС группы по иностранному языку будет приказ в разделе 'Порядок защит'...",
  "Влияют ли опечатки на уровень оригинальности при проверке антиплагиатом?":
      "Система антиплагиата анализирует контекст и структуру предложений...",
  "В ТУИС указано, что необходимо прикрепить ВКР в формате PDF и DOC. Если работа написана в LaTeX, нужно ли также прикрепить архив с исходным кодом?":
      "Нет, достаточно прикрепить только PDF-версию...",
  "Можно ли использовать сноски в тексте ВКР?":
      "Хотя это не является общепринятой практикой, использование сносок в тексте ВКР допускается...",
  "Может ли кто-то другой подать мою ВКР?":
      "Хотя можно попросить кого-то другого подать вашу ВКР, лучше сделать это лично...",
  "Нужно ли вшивать в твердую обложку только сам текст ВКР или все документы?":
      "В твердую обложку вшивается только сам текст ВКР вместе с аннотацией...",
  "Можно ли использовать грамоту за лучшую статью, полученную на конференции РУДН, в качестве доказательства достижения?":
      "Нет, грамота за лучшую статью не подходит в качестве доказательства достижения...",
  "Я не могу найти в ТУИСе шаблон для календарного плана. Где он может быть?":
      "Сейчас доступно только задание на ВКР, потому что шаблоны изменились...",
  "Нужно ли упоминать свои статьи в списке источников?":
      "Да, обязательно указывайте свои статьи в списке источников..."
}

teachers = {
  "Васильев Сергей Анатольевич":
      "-Математическое моделирование в телекоммуникациях -Машинное обучение для прогнозирования социально-экономических процессов - Анализ и прогнозирование финансовых рынков - Оптимизация бизнес-процессов - Анализ экономической динамики стран с применением методов машинного обучения - Анализ слабо структурированных данных методами машинного обучения.",
  "Виноградов Андрей Николаевич":
  "- Анализ ремонтных процессов ж/д оборудования с применением ML - Машинное обучение в киберспорте - Анализ датасетов изображений - Финансовые приложения (backend и frontend) - Мультиагентное планирование - Контроль рабочего процесса разработки ПО - Распознавание и моделирование мимики",
  "Диваков Дмитрий Валентинович":
  "- Прогнозирование временных рядов - Машинное обучение в медицине (прогнозирование инсульта) - Предиктивная аналитика в игровой индустрии - Классификация изображений (растения/животные) - Предиктивная аналитика данных - Анализ ассоциативных правил в задачах ритейла",
  "Киселёв Глеб Андреевич":
  "- Планирование для воплощенных агентов с языковыми моделями - Мультимодальное распознавание медицинских анализов - Иерархическое обучение с подкреплением - Выявление психофизиологического состояния - Обучение с подкреплением в анализе медицинских изображений",
  "Ловецкий Константин Петрович":
  "- Применение библиотеки IMSL в математической физике - Моделирование движения заряженных частиц - Решение ОДУ методом чебышевских коллокаций - Моделирование одномерных механических систем - Приложения метода коллокаций - Разложение по многочленам Чебышева",
  "Молодченков Алексей Игоревич":
  "- Анализ медицинских изображений (рентген, МРТ) - Обработка сигналов - Оценка эффективности рекламных кампаний - Сегментация химических структур на изображениях - Системы мониторинга деятельности сотрудников - Разметка текстов методами активного обучения - Разработка интерфейсных модулей для различных систем - Определение болезни Альцгеймера по МРТ снимкам",
  "Салпагаров Солтан Исмаилович":
  "- Автоматическая обработка естественных языков для использования в обучении LLM - Оптимизация многомерного интегрирования - Анализ логов компьютерных систем - Разработка интеллектуальных чат-ботов - Проектирование веб-платформ",
  "Тютюнник Анастасия Александровна":
  "- Классификация изображений - Генеративные нейронные сети - Анализ и прогнозирование временных рядов - Многомерные информационные системы - Сравнительный анализ методов прогнозирования временных рядов",
  "Хачумов Михаил Вячеславович":
  "- Распознавание жестов - Обнаружение и классификация объектов на изображениях - Анализ аэрокосмических снимков - Генеративно-состязательные нейронные сети - Сегментация изображений - Планирование маршрута робототехнических систем - Обработка снимков магнитно-резонансной томографии - Анализ графического интернет-контента пользователей",
  "Шорохов Сергей Геннадьевич":
  "- Нейродифференциальные уравнения - Управление портфелями активов - Обучение нейронных сетей на основе биномиального дерева - Обучение нейронных сетей для аппроксимации решений краевых задач - Стратегии управления полетом квадрокоптера - Стратегии управления финансовыми рисками на основе генеративно-состязательных сетей - Прогнозирование цен на рынке стального проката - Обучение с подкреплением для управления портфелем ценных бумаг",
  "Лукин Антон Вячеславович":
  "- Кросс-языковые модели анализа текстов - Анализ текстов на китайском языке",
  "Малых Михаил Дмитриевич":
  "- Исследование траекторий заряженных частиц - Геометрические свойства диаграмм Юнга - Алгебраические свойства гамильтоновых систем",
  "Фомин Максим Борисович":
  "- Разработка многомерных информационных систем - Алгоритмы физически корректного рендеринга - Проектирование сцен для 3D-объектов",
  "Панкратов Александр Серафимович":
  "- Проектирование электронных систем для различных отраслей (туризм, швейное производство, общепит, образование)",
  "Мамонов Антон Алексеевич":
  "- Автоматическая генерация пользовательских интерфейсов - Разработка модульных информационных систем",

}

rudn_faq = {
    " Не могу войти в ЭБС. Не получается осуществить вход в ЭБС РУДН.":
        "Войдите в ЭБС РУДН https://lib.rudn.ru/MegaPro/Web и авторизуйтесь через PASSPORT.RUDN, где логин – корпоративная электронная почта, пароль – пароль от корпоративной электронной почты.",
    " Подскажите, доступ в базы данных возможен только в университете?":
        "Для удаленного доступа необходимо подключить прокси-сервер. Инструкцию по подключению можно найти на сайте https://lib.rudn.ru",
    " Когда могу я сдать КНИГУ/УЧЕБНИК?":
        "1.	Библиотека в главном корпусе ул. Миклухо-Маклая, 6\n пн-чт – 11.00-17.45\n\n пт - 11.00-16.45\n\nсб - 13.00-16.45\n\n2.Библиотека инженерной академии и факультета физико-математических и естественных наук ул. Орджоникидзе, 3\n\nпн-чт – 11.00-17.45\n\nпт - 11.00-16.45\n\n3.Библиотека института русского языка, ул. Миклухо-Маклая, 10 к.2\nпн – пт 12.30 – 17.30",
    " Как можно узнать какая задолженность у меня есть? Какие книги я должен/должна в библиотеку? Где я найти список книг, которые я взял в библиотеке/долг в библиотеке? Здравствуйте, я хочу знать, КАКИЕ КНИГИ МНЕ НУЖНО ВЕРНУТЬ":
        "Информация о выданных книгах и сроках возврата в Вашем личном кабинете. Перейдите по адресу https://lib.rudn.ru/MegaPro/Web и авторизуйтесь через PASSPORT.RUDN, где логин – корпоративная электронная почта, пароль – пароль от корпоративной электронной почты. ",
    "Мне нужно подписать обходной лист":
        "На подписание обходного листа отводится 3 дня. Если нужно быстрее, то напишите на почту библиотеки library@rudn.ru",
    "Подскажите, пожалуйста, что делать при утере выданной литературы? Я потерял(а) книгу\книги, что делать?":
        "Обратитесь в библиотеку лично или по электронной почте library@rudn.ru. Библиотекарь подскажет, какой именно книгой необходимо заменить утерянную. Это можно сделать, в том числе, через удаленные сервисы. ",
    "Можно продлить книги?":
        "Укажите свои данные: ФИО, номер студенческого билета, факультет и курс. Мы продлим книги, если это возможно. Или напишем Вам о невозможности продления.",
    "Что такое УНИБЦ (НБ)? ":
        "УНИБЦ (НБ) – это Учебно-научный информационный библиотечный центр (Научная библиотека) РУДН.",
    "Как работает библиотека?":
        "Все отделы библиотеки работают пн-чт с 11.00 до 17.45, пт с 11.00 до 16.45, сб с 13.00 до 16.45",
    "Как записаться в УНИБЦ (НБ)/библиотеку/научную библиотеку?":
        "Все студенты, магистранты и аспиранты при поступлении становятся читателями нашей библиотеки.",
    "Как и куда сдать диссертацию?":
        "Диссертация + два автореферата в фонд УНИБЦ (НБ) принимаются в рабочие дни с 10.00 до 17.45 в Отделе комплектования (главный корпус, цокольный этаж, к. 63, 64, 66 Научной библиотеки), в субботу с 13.00 до 16.45 в отделе обслуживания в главном корпусе.",
    "Можно ли взять литературу в библиотеке главного корпуса, если книги нет в библиотеке моего факультета?":
        "Все студенты и преподаватели могут брать литературу в любом отделе нашей библиотеки",
    "Как подключить удаленный доступ к электронным ресурсам Научной библиотеки РУДН? ":
        "Необходимо подключить компьютер к прокси-серверу РУДН, следуя рекомендациям из инструкции для доступа к электронным ресурсам. При переходе на сайты электронных ресурсов потребуется ввести данные корпоративной почты РУДН (электронная почта должна заканчиваться на @pfur.ru).  ",
    "Что такое ЭБС РУДН и как это работает? ":
        "ЭБС РУДН – это Электронно-библиотечная система РУДН. Включает учебники, учебные пособия, лабораторные практикумы, методические материалы, монографии, статьи на русском и иностранных языках в печатном и цифровом форматах, в том числе преподавателей РУДН. С помощью ЭБС РУДН можно произвести поиск, отбор и заказ интересующей литературы, а также просматривать личный кабинет, содержащий информацию по ранее выданным Вам книгам",
    "Как найти электронную версию книги в ЭБС РУДН? ":
        "В ЭБС РУДН в поле ПОИСК следует поставить галочку ˅ рядом с полем <Электронная версия> ",
    "Если не успел сдать книгу вовремя?  ":
        "В случае нарушения сроков возврата литературы Вам необходимо как можно раньше принести книгу в библиотеку. Согласно п. 5.2 Правил пользования УНИБЦ (Научной библиотекой), пользователи несут ответственность за нарушение сроков возврата или перерегистрации литературы, и могут быть лишены права пользования ресурсами библиотеки сроком от 1 до 6 месяцев по решению администрации УНИБЦ (НБ). Отслеживать информацию о выданных книгах и сроках их возврата Вы можете в Личном кабинете библиотеки.",
    "Есть ли читальный зал для мужчин и уголок для мусульман? ":
        "РУДН является светским университетом, поэтому в читальных залах нет разделения по конфессиональному и гендерному принципу.",
    "Как зарегистрироваться в ТУИС? ":
        "Авторизация в ТУИС осуществляется с помощью учетных данных от корпоративной почты РУДН. Получить их можно здесь. Войдите в корпоративную почту РУДН, затем на странице входа в ТУИС сразу нажмите на кнопку Войти с корпоративным аккаунтом.",
}

# Состояния для ConversationHandler
CHOOSING, QUESTION, TEACHER, RUDN_FAQ = range(4)

# Создание клавиатуры с кнопками
def create_show_questions_keyboard():
    keyboard = [[KeyboardButton("Показать вопросы по ВКР\U00002753"), 
                 KeyboardButton("Показать преподавателей \U0001F9D0")],
               [KeyboardButton("Показать вопросы по РУДН\U0001F4BB")]]
    return ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

# Обработчик команды /start и текстового сообщения "start"
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text.lower() == "start":
        await context.bot.send_message(chat_id=update.effective_chat.id, text="Привет \U0001F44B! \nЯ бот для ответов на вопросы по ВКР \U0000270D,библиотеке \U0001F4D6,вопросы про РУДН,научным руководителям \U0001F9EA.\nНажмите на кнопку, чтобы увидеть список вопросов или преподавателей.")
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="Привет \U0001F44B! \nЯ бот для ответов на вопросы по ВКР \U0000270D,библиотеке \U0001F4D6,вопросы про РУДН,научным руководителям \U0001F9EA.\nНажмите на кнопку, чтобы увидеть список вопросов или преподавателей.")
    keyboard = create_show_questions_keyboard()
    await context.bot.send_message(chat_id=update.effective_chat.id, text="Выберите действие:", reply_markup=keyboard)
    return CHOOSING

# Обработчик команды "Показать вопросы"
async def show_questions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    questions_list = "\n".join([f"{i + 1}. {question}" for i, question in enumerate(faq.keys())])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=f"Выберите вопрос по номеру:\n{questions_list}")
    return QUESTION

# Обработчик команды "Показать преподавателей"
async def show_teachers(update: Update, context: ContextTypes.DEFAULT_TYPE):
    teachers_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(teachers.keys())])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=f"Выберите преподавателя по номеру:\n\n{teachers_list}")
    return TEACHER
# Обработчик команды "Показать вопросы про РУДН"
async def show_rudn_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    rudn_faq_list = "\n".join([f"{i + 1}. {question}" for i, question in enumerate(rudn_faq.keys())])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=f"Выберите вопрос по номеру:\n{rudn_faq_list}")
    return RUDN_FAQ


# Обработчик текстовых сообщений (FAQ)
async def answer_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        question_number = int(update.message.text)
        if 1 <= question_number <= len(faq):
            question = list(faq.keys())[question_number - 1]
            answer = faq[question]
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"Вопрос: {question}\nОтвет: {answer}")
        else:
            await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите корректный номер вопроса.\U0001F522")
    except ValueError:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите номер вопроса в виде числа.\U0001F51F")
    keyboard = create_show_questions_keyboard()
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Выберите действие:', reply_markup=keyboard)
    return CHOOSING

# Обработчик текстовых сообщений для преподавателей
async def answer_question_teacher(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        teacher_number = int(update.message.text)
        if 1 <= teacher_number <= len(teachers):
            teacher_name = list(teachers.keys())[teacher_number - 1]
            answer = teachers[teacher_name]
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"\U0001F978Преподаватель: {teacher_name}\nНаучная направление\U0001F52C: {answer}")
        else:
            await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите корректный номер преподавателя.\U0001F51F")
    except ValueError:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите номер преподавателя в виде числа.\U0001F51F")
    keyboard = create_show_questions_keyboard()
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Выберите действие:', reply_markup=keyboard)
    return CHOOSING

# Обработчик текстовых сообщений для вопросов про РУДН
async def answer_rudn_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        question_number = int(update.message.text)
        if 1 <= question_number <= len(rudn_faq):
            question = list(rudn_faq.keys())[question_number - 1]
            answer = rudn_faq[question]
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"Вопрос: {question}\n\nОтвет: {answer}")
        else:
            await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите корректный номер вопроса.\U0001F522")
    except ValueError:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="Пожалуйста, введите номер вопроса в виде числа.\U0001F51F")
    keyboard = create_show_questions_keyboard()
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Выберите действие:', reply_markup=keyboard)
    return CHOOSING

# Обработчик для завершения диалога
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, text="Диалог завершен.")
    return ConversationHandler.END


def main():
    # Создание приложения с токеном бота
    application = ApplicationBuilder().token('7044010767:AAGYoS63wJU-dBJ1b28ACFSfJ9cJd-QecLU').build()

    # Обработчики
    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler('start', start),
            MessageHandler(filters.Regex('^start$'), start)
        ],
        states={
            CHOOSING: [
                MessageHandler(filters.Regex('^Показать вопросы по ВКР\U00002753$'), show_questions),
                MessageHandler(filters.Regex('^Показать преподавателей \U0001F9D0$'), show_teachers),
                MessageHandler(filters.Regex('^Показать вопросы по РУДН\U0001F4BB$'), show_rudn_faq),
            ],
            QUESTION: [MessageHandler(filters.TEXT & (~filters.COMMAND), answer_question)],
            TEACHER: [MessageHandler(filters.TEXT & (~filters.COMMAND), answer_question_teacher)],
            RUDN_FAQ: [MessageHandler(filters.TEXT & (~filters.COMMAND), answer_rudn_faq)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    # Запуск приложения
    application.run_polling()

if __name__ == '__main__':
    main()